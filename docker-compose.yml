version: "2"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "log:1:1"

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic log --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  kafka-microservice:
    build:
      context: ./kafka-microservice
      dockerfile: Dockerfile
    environment:
      DB_USERNAME: "Cursed_Ninja"
      DB_PSWD: "@DatabaseatMongoDB#123"
      DB_CLUSTER: "cluster.lczmihh.mongodb.net"
      DB_DATABASE: "dyte"
      KAFKA_PORT: 5000
    depends_on:
      - init-kafka
    ports:
      - 5000:5000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DB_USERNAME: "Cursed_Ninja"
      DB_PSWD: "@DatabaseatMongoDB#123"
      DB_CLUSTER: "cluster.lczmihh.mongodb.net"
      DB_DATABASE: "dyte"
      PORT: 3000
    depends_on:
      - init-kafka
    ports:
      - 3000:3000

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - 8080:8080
